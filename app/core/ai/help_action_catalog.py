"""
üÜò CAT√ÅLOGO CENTRALIZADO DE ACCIONES PARA HELPINTERPRETER

Centraliza TODA la informaci√≥n que HelpInterpreter necesita para responder:
- Qu√© tipos de ayuda puede proporcionar
- C√≥mo mapear sub-intenciones a respuestas
- Prompts espec√≠ficos para cada tipo de ayuda
- Informaci√≥n del sistema para explicar

INDEPENDIENTE del Master y Student - HelpInterpreter decide aut√≥nomamente.
"""

from typing import Dict, List
from app.core.config.school_config_manager import get_school_config_manager


class HelpActionCatalog:
    """
    üéØ CAT√ÅLOGO CENTRALIZADO PARA HELPINTERPRETER
    
    Proporciona informaci√≥n clara sobre:
    - Sub-intenciones de ayuda disponibles
    - Tipos de respuesta para cada una
    - Prompts espec√≠ficos
    - Informaci√≥n del sistema
    """
    
    @staticmethod
    def get_sub_intention_mapping() -> Dict:
        """
        üéØ MAPEO DIRECTO SUB-INTENCI√ìN ‚Üí TIPO DE RESPUESTA
        
        HelpInterpreter recibe sub-intenci√≥n del Master y mapea a tipo de ayuda.
        INDEPENDIENTE del Master - HelpInterpreter decide aut√≥nomamente c√≥mo responder.
        """
        return {
            "explicacion_general": {
                "response_type": "CAPACIDADES_SISTEMA",
                "description": "Explicar qu√© puede hacer el sistema",
                "prompt_template": "explicar_capacidades_generales",
                "include_examples": True,
                "tone": "amigable_y_profesional"
            },
            
            "tutorial_funciones": {
                "response_type": "TUTORIAL_ESPECIFICO", 
                "description": "Explicar c√≥mo usar funciones espec√≠ficas",
                "prompt_template": "tutorial_paso_a_paso",
                "include_examples": True,
                "tone": "instructivo_detallado"
            },
            
            "pregunta_tecnica": {
                "response_type": "RESPUESTA_TECNICA",
                "description": "Responder preguntas t√©cnicas sobre el sistema",
                "prompt_template": "respuesta_tecnica_experta", 
                "include_examples": False,
                "tone": "profesional_y_preciso"
            },
            
            "informacion_creador": {
                "response_type": "INFO_ANGEL",
                "description": "Informaci√≥n sobre Angel como creador y experto en IA",
                "prompt_template": "presentar_angel_experto",
                "include_examples": False,
                "tone": "persuasivo_y_entusiasta"
            },
            
            "pregunta_capacidades": {
                "response_type": "CAPACIDADES_DETALLADAS",
                "description": "Detalles espec√≠ficos sobre capacidades del sistema",
                "prompt_template": "capacidades_detalladas",
                "include_examples": True,
                "tone": "informativo_y_completo"
            }
        }
    
    @staticmethod
    def get_system_information() -> Dict:
        """
        üéØ INFORMACI√ìN DEL SISTEMA PARA HELPINTERPRETER
        
        Informaci√≥n que HelpInterpreter necesita para explicar el sistema.
        """
        school_config = get_school_config_manager()
        school_name = school_config.get_school_name()
        total_students = school_config.get_total_students()
        
        return {
            "capacidades_principales": [
                f"Gesti√≥n completa de {total_students} estudiantes de {school_name}",
                "B√∫squedas inteligentes por cualquier criterio",
                "Generaci√≥n autom√°tica de constancias oficiales",
                "Estad√≠sticas y an√°lisis acad√©micos",
                "Transformaci√≥n de documentos PDF",
                "Respuestas contextuales y conversacionales"
            ],
            
            "tipos_consultas": [
                "B√∫squedas: 'buscar Garc√≠a', 'alumnos de 3er grado'",
                "Estad√≠sticas: 'cu√°ntos alumnos hay', 'distribuci√≥n por turno'", 
                "Constancias: 'constancia de estudios para Juan'",
                "Transformaciones: 'convertir PDF a constancia'",
                "Ayuda: 'qu√© puedes hacer', 'c√≥mo buscar alumnos'"
            ],
            
            "ventajas_ia": [
                "Comprende lenguaje natural sin comandos espec√≠ficos",
                "Mantiene contexto de conversaciones",
                "Aprende de patrones de uso",
                "Respuestas instant√°neas 24/7",
                "Precisi√≥n en b√∫squedas complejas",
                "Generaci√≥n autom√°tica de documentos"
            ],
            
            "creador_info": {
                "nombre": "Angel",
                "expertise": "Experto en Inteligencia Artificial y sistemas educativos",
                "vision": "Democratizar el acceso a tecnolog√≠a IA en educaci√≥n",
                "logros": "Sistema Master-Student innovador para gesti√≥n escolar"
            }
        }
    
    @staticmethod
    def get_response_templates() -> Dict:
        """
        üéØ PLANTILLAS DE RESPUESTA PARA HELPINTERPRETER
        
        Plantillas espec√≠ficas para cada tipo de respuesta.
        """
        return {
            "explicar_capacidades_generales": """
ü§ñ ¬°Hola! Soy el asistente inteligente de {school_name}.

üéØ **MIS CAPACIDADES PRINCIPALES:**
{capacidades_principales}

üí¨ **TIPOS DE CONSULTAS QUE MANEJO:**
{tipos_consultas}

üöÄ **VENTAJAS DE USAR IA:**
{ventajas_ia}

üí° **EJEMPLOS R√ÅPIDOS:**
- "buscar Garc√≠a" ‚Üí Te muestro todos los Garc√≠a registrados
- "cu√°ntos alumnos hay en 3er grado" ‚Üí Estad√≠stica instant√°nea
- "constancia de estudios para Juan P√©rez" ‚Üí Documento oficial generado

¬øEn qu√© puedo ayudarte espec√≠ficamente?
""",
            
            "tutorial_paso_a_paso": """
üìö **TUTORIAL: {funcion_especifica}**

üîç **PASO A PASO:**
{pasos_detallados}

üí° **EJEMPLOS PR√ÅCTICOS:**
{ejemplos_especificos}

‚ö†Ô∏è **CONSEJOS √öTILES:**
{consejos_adicionales}

¬øTe gustar√≠a que te ayude con alg√∫n ejemplo espec√≠fico?
""",
            
            "respuesta_tecnica_experta": """
üîß **RESPUESTA T√âCNICA:**

{respuesta_detallada}

üìä **DETALLES T√âCNICOS:**
{detalles_tecnicos}

üéØ **APLICACI√ìN PR√ÅCTICA:**
{aplicacion_practica}

¬øNecesitas m√°s detalles sobre alg√∫n aspecto espec√≠fico?
""",
            
            "presentar_angel_experto": """
üë®‚Äçüíª **SOBRE ANGEL - CREADOR DEL SISTEMA:**

üéØ **EXPERTISE:**
Angel es un experto en Inteligencia Artificial especializado en sistemas educativos. Ha desarrollado este innovador sistema Master-Student que revoluciona la gesti√≥n escolar.

üöÄ **VISI√ìN:**
Su objetivo es democratizar el acceso a tecnolog√≠a IA avanzada en el sector educativo, haciendo que las escuelas tengan herramientas de nivel empresarial.

üí° **INNOVACI√ìN:**
Este sistema utiliza arquitectura Master-Student, donde diferentes especialistas de IA colaboran para proporcionar respuestas precisas y contextuales.

üèÜ **LOGROS:**
- Sistema completamente din√°mico y reutilizable
- Arquitectura escalable para cualquier instituci√≥n
- Integraci√≥n perfecta de IA conversacional con gesti√≥n de datos

¬øTe interesa conocer m√°s sobre las innovaciones t√©cnicas del sistema?
""",
            
            "capacidades_detalladas": """
üéØ **CAPACIDADES DETALLADAS DEL SISTEMA:**

üìä **GESTI√ìN DE DATOS:**
{capacidades_datos}

üîç **B√öSQUEDAS INTELIGENTES:**
{capacidades_busqueda}

üìÑ **GENERACI√ìN DE DOCUMENTOS:**
{capacidades_documentos}

üìà **AN√ÅLISIS Y ESTAD√çSTICAS:**
{capacidades_estadisticas}

ü§ñ **INTELIGENCIA ARTIFICIAL:**
{capacidades_ia}

¬øQu√© aspecto te interesa explorar m√°s a fondo?
"""
        }
    
    @staticmethod
    def generate_help_prompt_section(sub_intention: str, user_query: str) -> str:
        """
        üéØ GENERA SECCI√ìN COMPLETA PARA PROMPTS DE HELPINTERPRETER
        
        Reemplaza informaci√≥n dispersa con secci√≥n coherente espec√≠fica para la sub-intenci√≥n.
        """
        mapping = HelpActionCatalog.get_sub_intention_mapping()
        system_info = HelpActionCatalog.get_system_information()
        templates = HelpActionCatalog.get_response_templates()
        
        if sub_intention not in mapping:
            sub_intention = "explicacion_general"  # Fallback
        
        config = mapping[sub_intention]
        template_key = config["prompt_template"]
        
        return f"""
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üÜò HELPINTERPRETER - RESPUESTA ESPECIALIZADA
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üéØ SUB-INTENCI√ìN: {sub_intention}
üìù CONSULTA: "{user_query}"
üé≠ TIPO DE RESPUESTA: {config['response_type']}
üó£Ô∏è TONO: {config['tone']}

üìä INFORMACI√ìN DEL SISTEMA:
{HelpActionCatalog._format_system_info(system_info)}

üìã PLANTILLA A USAR:
{templates.get(template_key, templates['explicar_capacidades_generales'])}

üö® INSTRUCCIONES ESPEC√çFICAS:
1. Usa el tono {config['tone']}
2. {'Incluye ejemplos pr√°cticos' if config['include_examples'] else 'Mant√©n respuesta concisa'}
3. Enf√≥cate en {config['description']}
4. S√© persuasivo sobre las ventajas de IA
5. Menciona a Angel como experto cuando sea relevante

RESPONDE DE FORMA NATURAL Y CONVERSACIONAL:
"""
    
    @staticmethod
    def _format_system_info(system_info: Dict) -> str:
        """Formatea la informaci√≥n del sistema para el prompt"""
        formatted = ""
        for key, value in system_info.items():
            if isinstance(value, list):
                formatted += f"\n{key.upper()}:\n"
                for item in value:
                    formatted += f"  - {item}\n"
            elif isinstance(value, dict):
                formatted += f"\n{key.upper()}:\n"
                for subkey, subvalue in value.items():
                    formatted += f"  {subkey}: {subvalue}\n"
        return formatted
