"""
HelpPromptManager - Centralizaci√≥n de prompts para HelpInterpreter
Reemplaza prompts hardcodeados en clases especializadas de ayuda
"""

from typing import Dict, Any
from app.core.logging import get_logger
from .base_prompt_manager import BasePromptManager

class HelpPromptManager(BasePromptManager):
    """
    Gestor centralizado de prompts para el sistema de ayuda

    REEMPLAZA:
    - HelpContentGenerator._build_content_prompt() (80 l√≠neas)
    - HelpResponseGenerator._build_response_prompt() (52 l√≠neas)
    - TutorialProcessor._build_tutorial_prompt() (55 l√≠neas)

    VENTAJAS:
    - Prompts centralizados y mantenibles
    - Contexto del sistema unificado
    - F√°cil optimizaci√≥n y actualizaci√≥n
    - Consistencia entre todos los prompts de ayuda
    """

    def __init__(self):
        super().__init__()  # Inicializar BasePromptManager
        self.logger = get_logger(__name__)
        self.system_context = self._build_system_context()

    def get_help_content_prompt(self, user_query: str, help_type: str, detected_entities: Dict) -> str:
        """
        PROMPT CENTRALIZADO: Genera contenido espec√≠fico de ayuda

        REEMPLAZA: HelpContentGenerator._build_content_prompt()

        Args:
            user_query: Consulta original del usuario
            help_type: Tipo de ayuda (solucion_problema, ejemplo_practico, general)
            detected_entities: Entidades detectadas por el master

        Returns:
            Prompt optimizado para generar contenido de ayuda
        """
        base_prompt = f"""
Eres un especialista en generar CONTENIDO DE AYUDA para sistema escolar.

CONTEXTO COMPLETO DEL SISTEMA:
{self.system_context}

CONSULTA DEL USUARIO: "{user_query}"
TIPO DE AYUDA: {help_type}
ENTIDADES DETECTADAS: {detected_entities}

INSTRUCCIONES ESPEC√çFICAS PARA {help_type.upper()}:
"""

        if help_type == "solucion_problema":
            return base_prompt + """
1. IDENTIFICA el problema espec√≠fico del usuario
2. PROPORCIONA soluciones EXACTAS basadas en el comportamiento real del sistema
3. INCLUYE pasos espec√≠ficos que realmente funcionan
4. MENCIONA caracter√≠sticas espec√≠ficas como vista previa autom√°tica

üéØ INSTRUCCIONES ESPECIALES PARA CONSTANCIAS:
Si la consulta es sobre "c√≥mo obtener constancia", DEBES explicar el proceso REAL:

PROCESO REAL PASO A PASO:
1. BUSCAR ALUMNO: "buscar [nombre del alumno]"
2. SOLICITAR CONSTANCIA: "constancia de [tipo] para [referencia al alumno]"
3. VISTA PREVIA: El sistema genera autom√°ticamente vista previa
4. REVISI√ìN: Se abre PDF autom√°ticamente para revisar
5. CONFIRMACI√ìN: Usuario puede confirmar o cancelar

TIPOS DE CONSTANCIA REALES:
- "estudios": Para CUALQUIER alumno registrado
- "calificaciones": SOLO para alumnos CON calificaciones
- "traslado": SOLO para alumnos CON calificaciones

REFERENCIAS CONTEXTUALES QUE FUNCIONAN:
- "para ese alumno" (si ya se busc√≥ antes)
- "para el primero/segundo/tercero" (posici√≥n en lista)
- "para [nombre completo]" (nombre espec√≠fico)

FORMATO DE RESPUESTA:
{
    "tipo_contenido": "solucion_problema",
    "problema_identificado": "Descripci√≥n del problema espec√≠fico",
    "soluciones": [
        {
            "titulo": "Proceso paso a paso REAL",
            "pasos": ["pasos exactos que funcionan en el sistema"],
            "consejos": ["caracter√≠sticas espec√≠ficas como vista previa autom√°tica"]
        }
    ],
    "alternativas": ["m√©todos alternativos reales"],
    "prevencion": ["reglas importantes del sistema"],
    "ejemplos_practicos": ["ejemplos exactos que funcionan"]
}
"""

        elif help_type == "ejemplo_practico":
            return base_prompt + """
1. GENERA ejemplos reales y espec√≠ficos del sistema
2. INCLUYE casos de uso comunes y √∫tiles
3. PROPORCIONA pasos detallados para cada ejemplo
4. MUESTRA resultados esperados

FORMATO DE RESPUESTA:
{
    "tipo_contenido": "ejemplo_practico",
    "ejemplos": [
        {
            "titulo": "Ejemplo 1",
            "descripcion": "Qu√© hace este ejemplo",
            "pasos": ["paso1", "paso2", "paso3"],
            "comando_ejemplo": "texto exacto a escribir",
            "resultado_esperado": "qu√© ver√° el usuario"
        }
    ],
    "casos_uso_comunes": ["caso1", "caso2"],
    "consejos_practicos": ["consejo1", "consejo2"]
}
"""

        else:  # Contenido general
            return base_prompt + """
1. ANALIZA qu√© informaci√≥n espec√≠fica necesita el usuario
2. ESTRUCTURA el contenido de manera clara y √∫til
3. INCLUYE ejemplos pr√°cticos cuando sea apropiado
4. PROPORCIONA pasos espec√≠ficos si es necesario

FORMATO DE RESPUESTA EXPLICATIVO:
{
    "tipo_contenido": "ayuda_general",
    "contenido_principal": "Explicaci√≥n COMPLETA y DETALLADA de todas las funcionalidades para generar confianza",
    "puntos_clave": ["funcionalidades principales", "capacidades del sistema", "limitaciones claras"],
    "ejemplos": ["ejemplos espec√≠ficos de nuestra escuela", "casos de uso reales"],
    "pasos_recomendados": ["c√≥mo empezar", "qu√© hacer despu√©s", "c√≥mo aprovechar al m√°ximo"],
    "informacion_adicional": "Detalles sobre interfaces, base de datos, transformaciones, etc.",
    "funcionalidades_detalladas": {
        "chat": "Qu√© puede hacer en esta interfaz",
        "interfaz_tradicional": "Qu√© funcionalidades adicionales est√°n disponibles",
        "base_datos": "C√≥mo funciona la informaci√≥n de estudiantes",
        "transformacion_pdf": "C√≥mo funciona el panel PDF y transformaciones"
    }
}

RESPONDE √öNICAMENTE CON EL JSON, sin explicaciones adicionales.
"""

    def get_help_response_prompt(self, user_query: str, help_content: Dict) -> str:
        """
        PROMPT CENTRALIZADO: Genera respuesta con auto-reflexi√≥n

        REEMPLAZA: HelpResponseGenerator._build_response_prompt()

        Args:
            user_query: Consulta original del usuario
            help_content: Contenido de ayuda generado

        Returns:
            Prompt para generar respuesta natural con auto-reflexi√≥n
        """
        # Usar identidad unificada del BasePromptManager
        unified_header = self.get_unified_prompt_header("especialista en ayuda y comunicaci√≥n")

        return f"""
{unified_header}

CONSULTA ORIGINAL: "{user_query}"
CONTENIDO GENERADO: {help_content}

üéØ MI TAREA ESPEC√çFICA:
Transformar el contenido t√©cnico en una respuesta NATURAL y CONVERSACIONAL que refleje mi personalidad como el asistente inteligente de la escuela.

üí¨ INSTRUCCIONES PARA RESPUESTA COMPLETA Y EXPLICATIVA:
1. Mantengo mi personalidad: profesional pero cercano, como un secretario escolar experimentado
2. Hablo en primera persona: "Puedo ayudarte con...", "Te explico c√≥mo..."
3. SOY MUY EXPLICATIVO: Detallo todas las funcionalidades para dar confianza al usuario
4. Explico TODOS los aspectos del sistema: paneles, transformaciones, base de datos, interfaces
5. Uso ejemplos pr√°cticos espec√≠ficos de nuestra escuela
6. Sugiero acciones espec√≠ficas que el usuario puede hacer ahora mismo
7. Explico limitaciones y capacidades claramente para generar confianza

üß† AUTO-REFLEXI√ìN DE AYUDA:
Despu√©s de generar tu respuesta, reflexiona como un especialista en soporte:

AN√ÅLISIS REFLEXIVO:
- ¬øLa respuesta podr√≠a generar preguntas de seguimiento?
- ¬øMencion√© funcionalidades que el usuario podr√≠a querer explorar?
- ¬øOfrec√≠ ejemplos que podr√≠an requerir m√°s detalles?
- ¬øDeber√≠a recordar el contexto de ayuda para futuras consultas?

DECISI√ìN CONVERSACIONAL:
Si tu respuesta espera continuaci√≥n, especifica:
- Tipo esperado: "tutorial_detallado|ejemplo_practico|exploracion_funcionalidad|none"
- Datos a recordar: informaci√≥n relevante para seguimiento
- Razonamiento: por qu√© esperas esta continuaci√≥n

FORMATO DE RESPUESTA:
{{
  "respuesta_usuario": "Tu respuesta de ayuda completa aqu√≠ - profesional, clara y √∫til",
  "reflexion_conversacional": {{
    "espera_continuacion": true|false,
    "tipo_esperado": "tutorial_detallado|ejemplo_practico|exploracion_funcionalidad|none",
    "datos_recordar": {{
      "funcionalidad_explicada": "constancias|busquedas|estadisticas|ayuda_general",
      "nivel_detalle_proporcionado": "basico|intermedio|avanzado",
      "ejemplos_mencionados": ["ejemplo1", "ejemplo2"],
      "temas_relacionados": ["tema1", "tema2"]
    }},
    "razonamiento": "Explicaci√≥n de por qu√© esperas o no esperas continuaci√≥n"
  }}
}}

CRITERIOS PARA ESPERAR CONTINUACI√ìN:
- Si explicas funcionalidades que tienen sub-opciones
- Si mencionas ejemplos que podr√≠an necesitar m√°s detalle
- Si introduces conceptos que podr√≠an generar preguntas
- Si ofreces m√∫ltiples opciones al usuario

TONO: Profesional pero amigable, como un colega educativo experto

RESPONDE √öNICAMENTE CON EL JSON, sin explicaciones adicionales.
"""

    def get_tutorial_prompt(self, user_query: str, tutorial_type: str, detected_entities: Dict) -> str:
        """
        PROMPT CENTRALIZADO: Genera tutoriales paso a paso

        REEMPLAZA: TutorialProcessor._build_tutorial_prompt()

        Args:
            user_query: Consulta original del usuario
            tutorial_type: Tipo de tutorial (consultas, constancias, sistema, etc.)
            detected_entities: Entidades detectadas

        Returns:
            Prompt para generar tutorial detallado
        """
        return f"""
Eres un especialista en crear TUTORIALES PASO A PASO para sistema escolar.

CONTEXTO DEL SISTEMA:
{self.system_context}

CONSULTA DEL USUARIO: "{user_query}"
TIPO DE TUTORIAL: {tutorial_type}
ENTIDADES DETECTADAS: {detected_entities}

INSTRUCCIONES PARA TUTORIAL DE {tutorial_type.upper()}:
1. CREA pasos espec√≠ficos y claros
2. INCLUYE ejemplos reales que funcionen
3. PROPORCIONA consejos pr√°cticos
4. ANTICIPA problemas comunes
5. OFRECE alternativas cuando sea apropiado

FORMATO DE RESPUESTA:
{{
    "tipo_tutorial": "{tutorial_type}",
    "titulo": "T√≠tulo descriptivo del tutorial",
    "descripcion": "Qu√© aprender√° el usuario",
    "pasos": [
        {{
            "numero": 1,
            "titulo": "T√≠tulo del paso",
            "descripcion": "Qu√© hacer en este paso",
            "ejemplo": "Ejemplo espec√≠fico",
            "consejos": ["consejo1", "consejo2"]
        }}
    ],
    "ejemplos_completos": [
        {{
            "titulo": "Ejemplo pr√°ctico completo",
            "descripcion": "Caso de uso real",
            "pasos_ejemplo": ["acci√≥n1", "acci√≥n2", "resultado"]
        }}
    ],
    "problemas_comunes": [
        {{
            "problema": "Descripci√≥n del problema",
            "solucion": "C√≥mo resolverlo"
        }}
    ],
    "consejos_adicionales": ["consejo1", "consejo2"],
    "siguientes_pasos": ["qu√© hacer despu√©s", "c√≥mo profundizar"]
}}

EJEMPLOS ESPEC√çFICOS PARA {tutorial_type.upper()}:
{self._get_tutorial_examples(tutorial_type)}

RESPONDE √öNICAMENTE CON EL JSON, sin explicaciones adicionales.
"""

    def _build_system_context(self) -> str:
        """Construye el contexto completo del sistema para todos los prompts"""
        return """
SISTEMA: Gesti√≥n Escolar Inteligente
ESCUELA: "PROF. MAXIMO GAMIZ FERNANDEZ"
CICLO: 2024-2025

üéØ COMPORTAMIENTO REAL DEL SISTEMA:

1. CONSULTAS DE ALUMNOS:
   ‚úÖ FUNCIONAMIENTO REAL:
   - Escribe en lenguaje natural: "cu√°ntos alumnos hay", "buscar Garc√≠a"
   - El sistema detecta autom√°ticamente la intenci√≥n
   - Genera SQL autom√°ticamente y ejecuta la consulta
   - Responde con datos reales de la base de datos (211 alumnos)
   - Mantiene contexto conversacional para preguntas de seguimiento

   ‚úÖ B√öSQUEDAS AVANZADAS DISPONIBLES:
   - Por nombre: "buscar Garc√≠a", "buscar Juan L√≥pez"
   - Por grado: "alumnos de 2do grado", "estudiantes de sexto"
   - Por grupo: "alumnos del grupo A", "estudiantes de 3B"
   - Por turno: "alumnos del turno matutino"
   - Combinadas: "alumnos de 2do grado grupo A turno matutino"

   ‚úÖ ESTAD√çSTICAS AUTOM√ÅTICAS:
   - "cu√°ntos alumnos hay" ‚Üí "211 alumnos registrados"
   - "alumnos por grado" ‚Üí Distribuci√≥n completa
   - "alumnos con calificaciones" ‚Üí Solo los que tienen notas
   - "alumnos sin calificaciones" ‚Üí Los que no tienen notas

   ‚úÖ INFORMACI√ìN DETALLADA:
   - Datos personales: nombre, CURP, matr√≠cula, fecha nacimiento
   - Datos escolares: grado, grupo, turno, ciclo escolar
   - Calificaciones: por materia y periodo (si est√°n disponibles)

2. GENERACI√ìN DE CONSTANCIAS:
   ‚úÖ PROCESO REAL PASO A PASO:

   PASO 1: Identificar al alumno
   - Primero busca al alumno: "buscar Juan P√©rez"
   - O usa referencia contextual: "para ese alumno" (si ya se busc√≥ antes)

   PASO 2: Solicitar constancia espec√≠fica
   - Especifica el tipo: "constancia de estudios para Juan P√©rez"
   - Tipos disponibles: estudios, calificaciones, traslado

   PASO 3: Vista previa autom√°tica
   - El sistema SIEMPRE genera una vista previa primero
   - Se abre autom√°ticamente el PDF de vista previa
   - El usuario puede revisar antes de confirmar

   PASO 4: Confirmaci√≥n (opcional)
   - El usuario puede confirmar o cancelar
   - Si confirma, se genera la versi√≥n final

   ‚úÖ REGLAS IMPORTANTES:
   - Constancias de calificaciones/traslado: SOLO para alumnos CON calificaciones
   - Constancias de estudios: Para CUALQUIER alumno registrado
   - SIEMPRE se genera vista previa primero
   - El PDF se abre autom√°ticamente para revisi√≥n

3. TRANSFORMACI√ìN DE PDFs:
   ‚úÖ PROCESO REAL EN ESTA MISMA INTERFAZ DE CHAT:
   - PASO 1: Hacer clic en el bot√≥n "Transformar PDF" (arriba a la izquierda de esta interfaz)
   - PASO 2: Se abre un panel a la derecha con vista previa del PDF cargado
   - PASO 3: Usar el bot√≥n "Ver datos" para ver la informaci√≥n extra√≠da autom√°ticamente
   - PASO 4: Hacer zoom y navegar en el panel PDF integrado
   - PASO 5: Opcionalmente guardar esos datos directamente en la base de datos desde "Ver datos"
   - PASO 6: Pedirle a la IA en este mismo chat: "transforma este PDF a constancia de [tipo]"
   - PASO 7: La IA transforma al formato solicitado y muestra vista previa de la transformaci√≥n
   - PASO 8: Se muestran ambos PDFs (original y transformado) para comparar con sus respectivos botones
   - PASO 9: Confirmar si se quiere abrir el PDF final o no

   ‚úÖ CAPACIDADES DE LA IA PARA TRANSFORMACI√ìN:
   - La IA puede transformar cualquier PDF cargado a constancia de estudios, calificaciones o traslado
   - Solo necesitas decirle: "transforma este PDF a constancia de [tipo]"
   - Extrae autom√°ticamente los datos del PDF y genera la nueva constancia
   - Proporciona vista previa de ambos PDFs (original y transformado) para comparaci√≥n
   - Permite confirmar antes de abrir el resultado final

   ‚úÖ CASOS DE USO REALES:
   - Convertir constancias de otros formatos al formato oficial de la escuela
   - Estandarizar documentos existentes de diferentes fuentes
   - Agregar alumnos desde PDFs externos a la base de datos para futuras referencias
   - Actualizar formato de constancias antiguas al est√°ndar actual

   ‚úÖ DISPONIBLE: En esta misma interfaz de chat con IA

4. SISTEMA CONVERSACIONAL:
   ‚úÖ CARACTER√çSTICAS REALES:
   - Mantiene contexto de conversaciones anteriores
   - Entiende referencias como "ese alumno", "del segundo", "para √©l"
   - Auto-reflexiona para sugerir acciones de seguimiento
   - Detecta autom√°ticamente si necesitas constancias despu√©s de buscar alumnos

   ‚úÖ FLUJO T√çPICO REAL:
   1. Usuario: "buscar Garc√≠a"
   2. Sistema: Muestra lista de Garc√≠a
   3. Sistema auto-reflexiona: "¬øNecesitas constancia para alguno?"
   4. Usuario: "constancia de estudios para el primero"
   5. Sistema: Genera vista previa autom√°ticamente

5. INTERFACES DISPONIBLES:
   ‚úÖ CHAT CONVERSACIONAL CON IA (ACTUAL) - VENTAJAS √öNICAS:
   üó£Ô∏è **COMO HABLAR CON UNA PERSONA:**
   - Consultas en lenguaje completamente natural: "¬øCu√°ntos ni√±os hay en 3er grado que sean del turno matutino?"
   - B√∫squedas inteligentes y espec√≠ficas: "Buscar alumnos del 5to grado grupo B"
   - Filtrado conversacional: "De esos, mu√©strame solo los del turno vespertino"
   - Estad√≠sticas y conteos autom√°ticos: "¬øCu√°ntos alumnos hay en total en la escuela?"
   - An√°lisis de distribuci√≥n: "¬øEn qu√© grado hay m√°s alumnos?" "¬øCu√°ntos hay por turno?"

   üß† **INTELIGENCIA CONVERSACIONAL:**
   - Entiende referencias: "para ese alumno", "el tercero de la lista", "para √©l"
   - Mantiene contexto: Recuerda b√∫squedas anteriores en la conversaci√≥n
   - Sugerencias proactivas: Te sugiere acciones bas√°ndose en lo que buscas
   - Interpretaci√≥n flexible: Entiende diferentes formas de preguntar lo mismo
   - Memoria de sesi√≥n: Conecta preguntas relacionadas autom√°ticamente

   üìä **CAPACIDADES ANAL√çTICAS AVANZADAS:**
   - Consultas complejas combinadas: "Alumnos de 4to grado grupo B del turno matutino"
   - Estad√≠sticas instant√°neas: Conteos por grado, grupo, turno autom√°ticos
   - Distribuciones inteligentes: "¬øCu√°ntos alumnos hay por grado?" "¬øC√≥mo se distribuyen por turno?"
   - Filtros din√°micos: Aplica m√∫ltiples criterios en una sola consulta
   - B√∫squedas con calificaciones: Encuentra alumnos que tienen calificaciones registradas
   - Generaci√≥n de constancias contextual: Basada en b√∫squedas previas

   ‚úÖ INTERFAZ TRADICIONAL:
   - Gesti√≥n completa de alumnos (agregar, modificar, eliminar)
   - B√∫squeda con filtros visuales predefinidos
   - Administraci√≥n completa de base de datos
   - Todas las funciones del chat + gesti√≥n administrativa

   üéØ **DIFERENCIA CLAVE:**
   - **Chat IA**: Como hablar con un secretario escolar experto que entiende todo lo que le dices
   - **Interfaz Tradicional**: Herramientas visuales tradicionales + gesti√≥n administrativa

   ‚ö†Ô∏è LIMITACIONES DEL CHAT:
   - NO puede modificar datos de alumnos existentes
   - NO puede eliminar alumnos de la base de datos
   - NO puede acceder a administraci√≥n avanzada de BD

6. AYUDA CONTEXTUAL:
   ‚úÖ RESPUESTAS BASADAS EN COMPORTAMIENTO REAL:
   - Explica exactamente c√≥mo funciona el sistema
   - Da ejemplos que realmente funcionan
   - Menciona caracter√≠sticas espec√≠ficas como vista previa autom√°tica
   - Incluye reglas de negocio reales (ej: calificaciones requeridas)
   - Distingue entre funcionalidades del chat vs interfaz tradicional

DATOS REALES DISPONIBLES:
- 211 alumnos registrados actualmente
- Grados: 1¬∞, 2¬∞, 3¬∞, 4¬∞, 5¬∞, 6¬∞
- Grupos: A, B, C
- Turnos: Matutino, Vespertino
- Informaci√≥n completa: nombres, CURPs, matr√≠culas, fechas, calificaciones
- Base de datos SQLite en tiempo real
"""

    def _get_tutorial_examples(self, tutorial_type: str) -> str:
        """Obtiene ejemplos espec√≠ficos seg√∫n el tipo de tutorial"""
        examples_map = {
            "consultas": """
- "cu√°ntos alumnos hay" ‚Üí Cuenta total de estudiantes
- "buscar Garc√≠a" ‚Üí Encuentra alumnos con apellido Garc√≠a
- "alumnos de 2do grado" ‚Üí Lista estudiantes de segundo grado
- "dame la CURP de Juan L√≥pez" ‚Üí Obtiene informaci√≥n espec√≠fica
""",
            "constancias": """
PROCESO REAL PASO A PASO:

1. BUSCAR ALUMNO PRIMERO:
   - "buscar Juan P√©rez" ‚Üí Sistema encuentra al alumno
   - "buscar Garc√≠a" ‚Üí Sistema muestra lista de Garc√≠a

2. SOLICITAR CONSTANCIA CON REFERENCIA:
   - "constancia de estudios para Juan P√©rez" ‚Üí Genera vista previa autom√°tica
   - "constancia de estudios para ese alumno" ‚Üí Usa contexto conversacional
   - "constancia para el primero" ‚Üí Usa posici√≥n en lista anterior

3. TIPOS DISPONIBLES:
   - "constancia de estudios" ‚Üí Para CUALQUIER alumno (siempre disponible)
   - "constancia de calificaciones" ‚Üí SOLO alumnos CON calificaciones
   - "constancia de traslado" ‚Üí SOLO alumnos CON calificaciones

4. VISTA PREVIA AUTOM√ÅTICA:
   - El sistema SIEMPRE genera vista previa primero
   - Se abre PDF autom√°ticamente para revisi√≥n
   - Usuario puede confirmar o cancelar despu√©s

EJEMPLOS REALES QUE FUNCIONAN:
- Usuario: "buscar CAMILA VARGAS" ‚Üí Sistema: "Encontr√© a CAMILA VARGAS GUTIERREZ"
- Usuario: "constancia de estudios para ella" ‚Üí Sistema: Genera vista previa autom√°tica
""",
            "sistema": """
- Escribir consultas en lenguaje natural
- Interpretar respuestas del sistema
- Usar funcionalidades de seguimiento
- Obtener ayuda contextual
""",
            "navegacion": """
- Usar el chat conversacional
- Interpretar respuestas del sistema
- Hacer preguntas de seguimiento
- Acceder a diferentes funcionalidades
""",
            "ejemplos": """
- Casos de uso reales del d√≠a a d√≠a escolar
- Consultas t√≠picas del personal administrativo
- Procesos comunes de generaci√≥n de documentos
"""
        }

        return examples_map.get(tutorial_type, "Ejemplos generales del sistema")
